[{"authors":null,"categories":null,"content":" Elements of the course are under revision for Spring 2020. Please check the badges on pages in these docs as well as GitHub repositories - if they say Spring 2019 they have not been updated for this semester yet.   The course docs are designed to provide a single place for accessing resources related to either the course as a whole or to specific lectures. If you find an error or omission, or have a suggestion, please open an issue on GitHub and let me know the details. I want to make sure this is as user-friendly and informative as possible!\nGetting Started These pages are primarily designed to help you get ready to take SOC 4650 or SOC 5650. Their material needs to be completed before the beginning of the semester. The Course Software page also can be used if you decide to set-up the course software on your own computer midway through the semester or have to set-up a new computer.\nFundamentals These reference pages cover materials that don't typically show up in textbooks. They'll be assigned as required readings over the first few weeks of the semester. They also serve as good references as the semester progresses and you find yourself needing reminders about certain basic skills like Markdown or how to format an .Rmd file for this course.\nLectures Each lecture has a page here that includes the primary topics, links to resources, an embedded slide deck, and (sometimes) additional notes about the material covered that day.\nFinal Project This is a landing page with links to final project resources, data, instructions, and a list of the final project due dates.\nTopics There are two indices included in this section - a listing of all of the topic keywords, ArcGIS processes, and R functions that we cover throughout the semester and a listing of R packages used (with links to documentation and resources).\n","date":1543903200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1515132000,"objectID":"4cdd37113783e47641dd300543c94e1b","permalink":"/docs/","publishdate":"2018-12-04T00:00:00-06:00","relpermalink":"/docs/","section":"docs","summary":"Elements of the course are under revision for Spring 2020. Please check the badges on pages in these docs as well as GitHub repositories - if they say Spring 2019 they have not been updated for this semester yet.   The course docs are designed to provide a single place for accessing resources related to either the course as a whole or to specific lectures. If you find an error or omission, or have a suggestion, please open an issue on GitHub and let me know the details.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"Overview Students have varying experiences learning computational techniques. For some, the math and programming that are the foundation for modern data science techniques come naturally. For others, being introduced to these concepts can be an anxiety producing experience. I am fond the phrase \u0026ldquo;your mileage will vary\u0026rdquo; for describing these differences - no two students have the exact same experience taking a computational methods course. While some of this is specific to this course, the general outlook on approaching data science work that I describe below is hopefully applicable in a far wider arena.\nZen and the Art of Data Analysis One of the biggest challenges with this course can be controlling the anxiety that comes along with learning new skills. R syntax, GIS terms, and Markdown can seem like foreign alphabets at first. Debugging R syntax can be both challenging and a large time suck, in part because you are not yet fluent with this language. Imagine trying to proofread a document written in a language that you only know in a cursory way but where you must find minute inconsistencies like misplaced commas.\nFor this reason, I also think it is worth reminding you that many students in the social sciences struggle with computational methods at first. It is normal to find this challenging and frustrating. I find that students who can recognize when they are beginning to go around in circles are often the most successful at managing the issues that will certainly arise during this course. Recognizing the signs that you are starting to spin your wheels and taking either ten minutes, an hour or two, or a day away from computational coursework is often a much better approach than trying to power through problems.\nData analysis therefore requires a certain mindfulness or what I call \u0026ldquo;habits of mind and habits of method.\u0026rdquo; These mental habits extend past being able to recognize that frustration is setting in. They also include the mental habits needed for Getting and Staying Organized and strategies for Getting Help as you navigate the inevitable errors that come with learning new analytically skills.\nGetting and Staying Organized Doing data science work, and having the space to step away for a day as the last section suggests, requires discipline and organization. Similarly, computational coursework can demanding not just because it is complex but because the courses often have a number of moving pieces that you need to keep track of. Being mindful of this challenge from the beginning, and taking steps to plan for it, is an important part of this course.\nKeeping Track of Where You Are Students who have some system for tracking their work and creating to-do lists are often the most successful in this course, not because they have a fundamentally better grasp on the content but because they simply are more organized. If you have never thought particularly hard about how you manage tasks, now is an excellent time to start doing so. You do not need fancy computer software to accomplish this, though there are an array of possibilities if you do want to use software to keep yourself organized. A legal pad or a notebook can be just as effective as a $50 to-do list manager. The point is, do something!\nI am fond of recommending the Getting Things Done methodology to students as part of thinking more holistically about staying organized. The website Lifehacker posted an excellent introduction to GTD that is a great way to get a sense of how it works and find additional resources for implementing it.\nThe GTD website has a great list of software for those of you looking for a to-do list application. One that isn't listed that I have used for collaborating with my student research team is Trello, a freemium website that allows you to create simple to-do lists. It isn't sophisticated enough for implementing GTD, but it is more than sufficient for managing to-do lists related to this course.\n","date":1543989600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515132000,"objectID":"2df115bbe4c2470f1bcd26e88c00c7c6","permalink":"/docs/course-approach/","publishdate":"2018-12-05T00:00:00-06:00","relpermalink":"/docs/course-approach/","section":"docs","summary":"Overview Students have varying experiences learning computational techniques. For some, the math and programming that are the foundation for modern data science techniques come naturally. For others, being introduced to these concepts can be an anxiety producing experience. I am fond the phrase \u0026ldquo;your mileage will vary\u0026rdquo; for describing these differences - no two students have the exact same experience taking a computational methods course. While some of this is specific to this course, the general outlook on approaching data science work that I describe below is hopefully applicable in a far wider arena.","tags":null,"title":"Approaching Coursework","type":"docs"},{"authors":null,"categories":null,"content":"Resources  View on Syllabus   View on GitHub   Exercise - Email   Functions \nLecture Slides    Leaflet Basics As a way to get to know R and RStudio, we'll be working with the R package leaflet. leaflet is the R implementation of leaflet.js, an open-source Java Script library for building interactive maps. To get started, you'll need to install leaflet and a number of other packages via CRAN:\ninstall.packages(c(\u0026quot;here\u0026quot;, \u0026quot;leaflet\u0026quot;, \u0026quot;sf\u0026quot;, \u0026quot;tidyverse\u0026quot;, \u0026quot;usethis\u0026quot;))  We can open leaflet and the other packages we'll need with the library() function:\nlibrary(\u0026quot;here\u0026quot;) library(\u0026quot;leaflet\u0026quot;) library(\u0026quot;magrittr\u0026quot;) library(\u0026quot;readr\u0026quot;) library(\u0026quot;sf\u0026quot;)  Get Data To get data quickly for today, you can use the following code snippet in your console:\nusethis::use_course(\u0026quot;https://github.com/slu-soc5650/lecture-01/archive/master.zip\u0026quot;)  A Simple Map leaflet itself is straightforward to get up and running. If we wanted an interactive map with a marker placed on-top of Morrissey Hall, we would use the following script entered into R:\nleaflet() %\u0026gt;% addTiles() %\u0026gt;% addMarkers(lng=-90.237104, lat=38.637547, popup=\u0026quot;Morrissey Hall\u0026quot;)  The leaflet() function creates a map widget, and the addTiles() function adds a basemap to it. By default, OpenStreetMap is used for the basemap. Finally, we use addMarkers() to specify the longitude and latitude of our marker, and we enter in a label that will appear as a pop-up when a user clicks on the marker. lng, lat, and popup are all called \u0026ldquo;arguments\u0026rdquo; - these are used to control how a function operates.\nThe %\u0026gt;% is called the \u0026ldquo;pipe operator\u0026rdquo;, and it is used to chain together functions in what we will call \u0026ldquo;pipelines\u0026rdquo;. This pipeline can be read like a list, with the word then substituted for each instance of %\u0026gt;%:\n First we create a map widget, then we add basemap tiles, then we add a marker at the given longitude and latitude.  The code chunk above produces the following map in RStudio's Viewer tab:\nYou can use the Show in new window icon (a white box with a small arrow facing up and right) to open the map in your web browser.\nChanging the Basemap To alter the basemap, we can use addProviderTiles() in place of addTiles(). I like the CartoDB \u0026ldquo;Positron\u0026rdquo; basemap. To use the Positron basemap, we create a second pipeline:\nleaflet() %\u0026gt;% addProviderTiles(providers$CartoDB.Positron) %\u0026gt;% addMarkers(lng=-90.237104, lat=38.637547, popup=\u0026quot;Morrissey Hall\u0026quot;)  Two things are important to note here. When we load the leaflet package, we have access to a data object called providers. You can use names(providers) to explore it. providers is a vector of items, each of which corresponds to a different basemap. We can select one of those items, CartoDB.Positron, by separating providers from the item name with a dollar sign ($). This is a classic way in which elements of a data set are accessed in R syntax.\nThe second code chunk produces the following map in RStudio's Viewer tab:\nAdding Additional Points The data/sluPlaces.csv file (a .csv file is a type of spreadsheet) contains information on a couple of other places where I find myself regularly on campus. We can read it into R using the readr package (part of the tidyverse):\nsluPlaces \u0026lt;- read_csv(here(\u0026quot;data\u0026quot;, \u0026quot;sluPlaces.csv\u0026quot;))  We read the statement from right to left - the data found at data/sluPlaces.csv is read correctly as .csv data, and the resulting imported data is stored in an object in our global environment named sluPlaces. The here() function helps us write simple, operating system agnostic file paths that will always be relative to where the .Rproj file is stored. We'll talk more about this as the semester progresses.\nWe can explore the data a number of ways, including with the View() (output not shown) function and the str() function:\nstr(sluPlaces)  If we wanted to use View(), it would be implemented like this:\nView(sluPlaces)  When executed in the console, it will produce a spreadsheet-like view within RStudio.\nThe .csv data are tabular data - they contain longitude and latitude data, but they are not projected. This means we are missing the geometric data that locates these longitude and latitude data in space. leaflet can take these spatial references, however, and convert them to usable geometric data. We do so using a very similar process to what we did before:\nleaflet(data = sluPlaces) %\u0026gt;% addProviderTiles(providers$CartoDB.Positron) %\u0026gt;% addMarkers(lng = ~lng, lat = ~lat, popup = ~name)  The data = sluPlaces argument in leaflet() directs R to the appropriate data set to map. We use the tilde (~) to indicate to leaflet that these are variables within sluPlaces.\nThe code chunk produces the following plot:\nReading in Spatial Data For data that have already been converted to geometric data, we use the sf package to read them. The importing process looks similar to what we used with the .csv file. We'll demonstrate this with the violent crime data for Shaw:\nshawViolent \u0026lt;- st_read(here(\u0026quot;data\u0026quot;, \u0026quot;SHAW_Violent_2018.shp\u0026quot;), stringsAsFactors = FALSE)  We'll still use here() to specify the file path, but the function is different now because we need a specialized tool for geometric data. Note that we open the .shp file - this is the primary piece of the family of files that together contain all of the relevant information to locate the Shaw violent crime data in space and describe it. We work with SHAW_Violent_2018.shp, but the other parts must be present as well.\nTo map these data, we no longer need to specify lng and lat because we're using geometric data as well:\nleaflet(data = shawViolent) %\u0026gt;% addProviderTiles(providers$CartoDB.Positron) %\u0026gt;% addMarkers(popup = ~crimeCt)  We use the simplified crime category (crimeCt) for the popup this time.\nThe code chunk produces the following plot:\nFinally, we can make a similar map with all Part 1 crimes:\nshawP1 \u0026lt;- st_read(here(\u0026quot;data\u0026quot;, \u0026quot;SHAW_Part1_2018.shp\u0026quot;), stringsAsFactors = FALSE)  And then we'll map them:\nleaflet(data = shawP1) %\u0026gt;% addProviderTiles(providers$CartoDB.Positron) %\u0026gt;% addMarkers(popup = ~crimeCt)  ","date":1543989600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548136800,"objectID":"44385b6d842e4a56bed63692b7ff1610","permalink":"/docs/lecture-01/","publishdate":"2018-12-05T00:00:00-06:00","relpermalink":"/docs/lecture-01/","section":"docs","summary":"Resources  View on Syllabus   View on GitHub   Exercise - Email   Functions \nLecture Slides    Leaflet Basics As a way to get to know R and RStudio, we'll be working with the R package leaflet. leaflet is the R implementation of leaflet.js, an open-source Java Script library for building interactive maps. To get started, you'll need to install leaflet and a number of other packages via CRAN:","tags":null,"title":"Lecture-01 - Course Introduction","type":"docs"},{"authors":null,"categories":null,"content":"Resources Onboarding Checklist \nOverview Before you begin the semester, there are a number of things that you should do to help set yourself up for success. All of the applicable sections below should be completed before our first class on January 14th. Before you do anything else, though, you should read through the Syllabus. Make sure you have a good sense of what is required for the course. If you have questions, bring them to the first day of class!\nAccount Signups Get Started with the Discussion Board Discourse is an open source forum platform that we will be using this semester to stay in touch and host virutal office hours. You should receive an email with registration information, and the site can be found here. Once you receive the invitation and accept, you can update your profile by clicking on the profile icon in the upper right-hand corner and selecting the gear icon:\nAt a minimum, please fill out the Name field under Account with your preferred first and last name!\nGet Started with GitHub The service that is hosting this website is called GitHub. GitHub is used by programmers, data scientists, and researchers for hosting computer code, data, and project materials (like websites). We will be using GitHub extensively this semester. You will need a free account, which you can sign up for one from GitHub's homepage. If you already have a GitHub account, you do not need a new one.\nOnce you have a GitHub user name, send Chris a direct message via our chat software Slack with it so that you can be added to the SOC 4650 \u0026amp; SOC 5650 organization. Chris's username is @chris on Slack, and the Direct Messages can be found by scrolling all the way down in the left hand sidebark. Please make sure your display name for Slack matches your real name.\nAfter you have been added to the organization, you should find your assignments repository and check the Issues tab. There should be an open Issue describing how feedback will be disseminated this semester. Please read it and then close the issue so that we know you've seen it.\nCourse Software There are two options for accessing the course software, and some instructions for how install it. Please read through these options carefully and make the decision that is best for you.\nOptions for Accessing Software One option is to rely on the computers in our classroom, and - lucky you(!) - you get 24-hour access to Morrissey Hall for the semester. If you decide to go this route, you can go right to the course software page to continue setting up your computer - you'll need to install just the specific R packages and GitHub Desktop. Details on the extent of setup required will be posted there since it is subject to change. Make sure you know how to use Windows File Explorer, especially if you are a regular macOS user.\nAnother option for accessing the software is to use your own computer. If you decide to go this route, please read the next subsection on computer prep, and then head over to the course software page to continue setting up your computer. As long as you have a relatively new computer (within the last few years), you should have no problem using any of the applications for this class.\nComputer Prep If you are using your own computer, you should do the following before proceeding:\n  Make sure your operating system is up-to-date. If you are able, I would also recommend upgrading your computer to the most recent release of its operating system that the computer can run.\n On macOS, you can do this through the App Store Both Windows 7 and Windows 10 have system update tools.    We'll be sharing computer files throughout the semester, so you should ensure that you have functioning anti-virus software and that it is up-to-date. You can get Symantec EndPoint Protection anti-virus software for free from SLU. Go to \u0026ldquo;ITS Software Downloads\u0026rdquo; under \u0026ldquo;Tools\u0026rdquo; on mySLU.\n  You'll also need to download files, so you'll need to make sure you have at least fifty gigabytes free on your hard drive if you are installing ArcGIS Pro and at least twenty gigabytes free if you are not. If you're not sure how to check this, here are some instructions for Windows and macOS.\n Options for de-cluttering include deleting files that are no longer needed, moving files to an external device, moving files to a cloud storage system, or upgrading the internal hard drive (may not be possible for macOS users and some Windows users).    Make sure you know how to access your computer's file management system.\n   On macOS, this means being comfortable with Finder.app for finding folders, making new ones, and opening files. Here are some tips for using Finder on recent versions of macOS. On Windows, this means being comfortable with Windows File Explorer for finding folders, making new ones, and opening files. Here are some tips for using File Explorer on Windows 7 or Windows 10.  Head over to the course software page to continue setting up your computer.  Get Access to Books There are a number of different books required for this course. Each book has been selected to correspond with one or more of the course objectives. Please purchase copies of the first three books and decide if you would like a physical copy of the fourth:\n Brewer, Cynthia. 2015. Designing better Maps: A Guide for GIS users. Redlands, CA: ESRI Press. Gorr, Wilpen and Kristen Kurland. 2017. GIS Tutorial 1 for ArcGIS Pro. Redlands, CA: ESRI Press. Wickham, Hadley and Garrett Grolemund. 2016. R for data science. Sebastopol, CA: O’Reilly. Webbook Available.  All of the books are available in the bookstore. They can also be ordered online. If you would rather use e-books, those are acceptable for this course as well. The Reading List includes the assigned readings for both the web and print versions of Wickham and Grolemund's R for data science (2016), and you are free to choose either version.\nOther Materials The other item to optionally purchase is a 1.5\u0026rdquo; three-ring binder. While all course materials are available online, they are often easier to use if they are printed. Everyone will get handouts the first week so you can decide if you want to continue receiving hardcopies beyond the first lecture, or if you'd prefer to only have the digital copies. If you do opt-in to receiving the hardcopies, a binder will help keep things organized.\nAdministrative Tasks All students should complete the Student Information Sheet, which gives me some info about you and gives you the chance to let me know about any initial concerns you might have. It also contains a syllabus agreement, which confirms that you have read the Syllabus and understand the course policies.\nCoursework There are three pieces of coursework that you should complete:\n You should view two videos posted on the Course Preview page and check out the interactive map discussed in the first video. You should complete the assigned reading (and if you want, the optional ones too) listed in the Syllabus. You should complete Lecture-01 Entry Ticket, which asks a few short questions about the videos and interactive map. You should complete the assigned readings for Lecture-01, which are listed in the Syllabus. Come to class stoked to make your first maps!  ","date":1543903200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515132000,"objectID":"b861d0ca1a691ef3c164ec8ee7d0680b","permalink":"/docs/course-onboarding/","publishdate":"2018-12-04T00:00:00-06:00","relpermalink":"/docs/course-onboarding/","section":"docs","summary":"Resources Onboarding Checklist \nOverview Before you begin the semester, there are a number of things that you should do to help set yourself up for success. All of the applicable sections below should be completed before our first class on January 14th. Before you do anything else, though, you should read through the Syllabus. Make sure you have a good sense of what is required for the course. If you have questions, bring them to the first day of class!","tags":null,"title":"Course Onboarding","type":"docs"},{"authors":null,"categories":null,"content":"Open Data and GIS in Los Angeles One of the course learning outcomes is titled \u0026ldquo;GISc and Public Policy\u0026rdquo;. Much of the data that we will use this semester is available to us because governmental agencies at the Federal, state, and local levels have published it and made it accessible. We call the movement to make as much data available as possible \u0026ldquo;open data\u0026rdquo;.\nDifferent governments have embraced the open data movement to varying degrees, and the video below discusses Los Angeles\u0026rsquo; integration of open data and GIS. It is a 9 minute talk given by L.A.\u0026lsquo;s former Chief Data Officer Lilian P. Coral. The talk was part of a conference organized by ESRI, the makers of ArcGIS.\n   Once you've watched the video, check out the web application featured in the video that visualizes pedestrian and cyclist injuries in Los Angeles. You can also visit L.A.\u0026lsquo;s open data website called GeoHub.\nAnalysis Development Making a produce like L.A.\u0026lsquo;s visualization of pedestrian and cyclist injuries is a complicated effort. Data must be obtained from various sources, modified (a process we call \u0026ldquo;data wrangling\u0026rdquo; or \u0026ldquo;data cleaning\u0026rdquo;), and then linked with map coordinates. Once it is ready to be mapped, the web application must be designed and created. We'll call this large-scale process a \u0026ldquo;workflow\u0026rdquo; this semester.\nThe workflow that we'll use is opinionated - there is a strong premise that underlies the workflow about the ways in which spatial data (and data more generally) should be obtained, stored, modified, and mapped. Hilary Parker is a data scientist at Stichfix and also runs a data science podcast called Not So Standard Deviations. She has been speaking recently about an idea called opinionated analysis development. The video linked to below is a 25 minute talk she gave on this idea last year, and she now has a draft paper out on the topic as well. Our workflow for this semester is closely linked to the ideas she discusses in this talk.\n\n Many (but not all of you) will have experienced some parts of these processes before. Perhaps you've used Microsoft Excel to organize some information or used SPSS to analyze some quantitative data. We won't be using those tools. Instead, this course will emphasize the use of other tools that support reproducible, accurate, and collaborative data analysis. Throughout the semester, we'll discuss why these tools are important and the advantages they have over other products that are out there. Inspired by Hilary's idea of opinionated analysis development, our goal each week will be to focus on the processes that can be used to increase the reproducibility and accuracy of our geospatial work.\nSome of these processes, like using RMarkdown, are introduced in the introductory \u0026ldquo;chapter\u0026rdquo; (it is quite short!) to Duke University sociologist Kieran Healy's primer The Plain Person's Guide to Plain Text Social Science. This is the one required reading for the entry ticket (though there are several optional ones listed on the syllabus.\nLecture-01 Entry Ticket The entry ticket for the first lecture asks three follow-up questions about these videos and L.A.\u0026lsquo;s interactive website. Please answer these questions and submit them before class on January 14th. Answers must be submitted through Google Forms and each response should be three to four sentences in length. The questions are provided here for reference:\n Briefly describe how the City of Los Angeles uses data and mapping to inform how they deliver city services. After viewing the interactive map showing pedestrian and cyclist injuries, describe what you thought of the map. Some example considerations could include: was it easy to read? to navigate? did you like the colors? was it missing relevant data? In your own words, what are the key aspects of opinionated analysis development? What are some of the advantages of using plain text for data analysis?  The entry ticket also asks for an update on your course onboarding process.\n","date":1543903200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515132000,"objectID":"f5d8021a03a81b574899ba6dff3b2e4f","permalink":"/docs/course-preview/","publishdate":"2018-12-04T00:00:00-06:00","relpermalink":"/docs/course-preview/","section":"docs","summary":"Open Data and GIS in Los Angeles One of the course learning outcomes is titled \u0026ldquo;GISc and Public Policy\u0026rdquo;. Much of the data that we will use this semester is available to us because governmental agencies at the Federal, state, and local levels have published it and made it accessible. We call the movement to make as much data available as possible \u0026ldquo;open data\u0026rdquo;.\nDifferent governments have embraced the open data movement to varying degrees, and the video below discusses Los Angeles\u0026rsquo; integration of open data and GIS.","tags":null,"title":"Course Preview","type":"docs"},{"authors":null,"categories":null,"content":"Overview This course is built primarily around a set of four software applications - ArcGIS Pro, the programming language R, the graphical user interface for R called RStudio, and GitHub Desktop. As I noted on the course onboarding page, there are two choices for accessing software. Please read through the course onboarding page page carefully and make the decisions you think are best for you - either using your own computer or using a lab computer. Feel free to shoot me an email if you have questions about which approach is best.\nArcGIS Pro  ArcGIS Pro is installed in the GIS lab.   I am able to provide licenses for ArcGIS Pro to students who are interested in obtaining them. If you would like a license, please check the system requirements first. If your computer meets the minimum requirements, email me for a license. Then:\n Visit ESRI's education edition website to begin the process of activating and downloading your ArcGIS Pro Student Trial software. Log in using your Existing ESRI account (the same one you were given during the course onboarding process). Enter the license code and click Activate ArcGIS. Click the button for the ArcGIS for Desktop software version being activated - the latest version of ArcGIS Pro. If necessary, download the ArcGIS Uninstall Utility and uninstall previous versions of ArcGIS Desktop or ArcGIS Pro. Run the executable file that you downloaded to install ArcGIS Pro.  Spatial Libraries  These libraries are installed in the GIS lab and need to be installed only if you are using R on your personal computer.   There are three open-source spatial libraries that we will indirectly use this semester - GDAL, GEOS, and PROJ.4. They'll be used by the R package sf. You should only have to run this once per computer.\nWindows To install the libraries on Windows, you need to have RTools installed. RTools is a suite of tools for building packages on Windows, and it will allow sf to install a number of spatial data libraries that it requires to read and process shapefiles. These tools require administrative rights, so you may have to enter your password. You should use the latest version, which is currently Rtools35.\nmacOS Users on macOS will have to install the spatial data libraries on their own. An omnibus installer is available from the Kyng Chaos website - you'll want to download and run the GDAL 2.2 Complete installer.\nR Base R  Base R is installed in the GIS lab.   You can download R from its website. Choose \u0026ldquo;Download R for (Mac) OS X\u0026rdquo; or \u0026ldquo;Download R for Windows\u0026rdquo;. Windows users should look for text that says \u0026ldquo;install R for the first time\u0026rdquo; and click the base to the left of that text. Both macOS and Windows users should install R version 3.5.2, known as \u0026ldquo;Eggshell Igloo\u0026rdquo;.\nIf you already have R installed, please make sure you have the latest version. You can upgrade it using the same process for a new installation.\nRStudio  RStudio is installed in the GIS lab.   RStudio is a graphical user interface for R that will make learning the language and using it much, much easier. You should download the free version of RStudio from their website. Choose the appropriate installer for your platform. Make sure R is already installed before installing RStudio.\nIf you already have RStudio installed, please make sure you have the latest version. You can upgrade it using the same process for a new installation.\nR Packages  This has been updated since lecture-05. Please add the needed software:\ninstall.packages(c(\u0026quot;tidycensus\u0026quot;, \u0026quot;tigris\u0026quot;))\n  The packages we will need this semester can be downloaded using the following code chunk in RStudio's console:\ninstall.packages(c(\u0026quot;tidyverse\u0026quot;, \u0026quot;here\u0026quot;, \u0026quot;janitor\u0026quot;, \u0026quot;knitr\u0026quot;, \u0026quot;leaflet\u0026quot;, \u0026quot;mapview\u0026quot;, \u0026quot;naniar\u0026quot;, \u0026quot;radix\u0026quot;, \u0026quot;RColorBrewer\u0026quot;, \u0026quot;remotes\u0026quot;, \u0026quot;rmarkdown\u0026quot;, \u0026quot;sf\u0026quot;, \u0026quot;testDriveR\u0026quot;, \u0026quot;tidycensus\u0026quot;, \u0026quot;tigris\u0026quot;, \u0026quot;tmap\u0026quot;, \u0026quot;viridis\u0026quot;, \u0026quot;webshot\u0026quot;))  You should only have to run this once per computer.\nPhantomJS PhantomJS is a means for creating \u0026ldquo;headless\u0026rdquo; web-browsers and thus rendering the output of HTML widegts in knitr documents. It makes it possible to get a screengrab of a leaflet map when you \u0026ldquo;knit\u0026rdquo; your .Rmd files, for instance. To install it, use the following code chunk in RStudio's console:\nwebshot::install_phantomjs()  Like installing packages, you should only have to run this once per computer.\nGitHub Desktop  GitHub Desktop will need be installed both in the lab and on personal computers.   In addition to the applications above, everyone will need a local installation of GitHub Desktop, which is a graphical user interface for accessing Git and GitHub.com. It can be downloaded for free from the application's website. You will need to download and run the installer. Once it is complete, you will need to login to the application with your GitHub.com username and password.\nIf you already have GitHub Desktop installed, you should check to make sure you are running the latest version of GitHub Desktop. If you need to update GitHub Desktop, you should also download.\nOther Applications TBA\n","date":1543903200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549951200,"objectID":"4d35c06a94fe58298d2af432933711bc","permalink":"/docs/course-software/","publishdate":"2018-12-04T00:00:00-06:00","relpermalink":"/docs/course-software/","section":"docs","summary":"Overview This course is built primarily around a set of four software applications - ArcGIS Pro, the programming language R, the graphical user interface for R called RStudio, and GitHub Desktop. As I noted on the course onboarding page, there are two choices for accessing software. Please read through the course onboarding page page carefully and make the decisions you think are best for you - either using your own computer or using a lab computer.","tags":null,"title":"Course Software","type":"docs"}]